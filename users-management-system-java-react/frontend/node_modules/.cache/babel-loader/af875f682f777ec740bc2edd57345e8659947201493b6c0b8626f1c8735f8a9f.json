{"ast":null,"code":"var _jsxFileName = \"C:\\\\an3\\\\IS\\\\HAISAVEDEEMMMMMMMMM\\\\users-management-system-java-react\\\\frontend\\\\src\\\\components\\\\event\\\\UpdateEventsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport UserService from '../service/UserService';\nimport EventService from \"../service/EventService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateEvent() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    eventId\n  } = useParams();\n  const [eventData, setEventData] = useState({\n    name: '',\n    location: '',\n    description: '',\n    dateTime: '',\n    availableTickets: ''\n  });\n  useEffect(() => {\n    fetchEventDataById(eventId); // Pass the userId to fetchUserDataById\n  }, [eventId]); //wheen ever there is a chane in userId, run this\n\n  const fetchEventDataById = async eventId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await EventService.getUserById(eventId, token); // Pass userId to getUserById\n      const {\n        name,\n        email,\n        role,\n        city\n      } = response.ourUsers;\n      setUserData({\n        name,\n        email,\n        role,\n        city\n      });\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData(prevUserData => ({\n      ...prevUserData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const confirmDelete = window.confirm('Are you sure you want to delete this user?');\n      if (confirmDelete) {\n        const token = localStorage.getItem('token');\n        const res = await UserService.updateUser(userId, userData, token);\n        console.log(res);\n        // Redirect to profile page or display a success message\n        navigate(\"/admin/user-management\");\n      }\n    } catch (error) {\n      console.error('Error updating user profile:', error);\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: userData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: userData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"role\",\n          value: userData.role,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          value: userData.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateEvent, \"Zyha9oqKTT3KkfE9zihaOylh1Qk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateEvent;\nexport default UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateEvent\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","UserService","EventService","jsxDEV","_jsxDEV","UpdateEvent","_s","navigate","eventId","eventData","setEventData","name","location","description","dateTime","availableTickets","fetchEventDataById","token","localStorage","getItem","response","getUserById","email","role","city","ourUsers","setUserData","error","console","handleInputChange","e","value","target","prevUserData","handleSubmit","preventDefault","confirmDelete","window","confirm","res","updateUser","userId","userData","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","UpdateUser","$RefreshReg$"],"sources":["C:/an3/IS/HAISAVEDEEMMMMMMMMM/users-management-system-java-react/frontend/src/components/event/UpdateEventsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport UserService from '../service/UserService';\r\nimport EventService from \"../service/EventService\";\r\n\r\nfunction UpdateEvent() {\r\n    const navigate = useNavigate();\r\n    const { eventId } = useParams();\r\n\r\n\r\n    const [eventData, setEventData] = useState({\r\n        name: '',\r\n        location: '',\r\n        description: '',\r\n        dateTime: '',\r\n        availableTickets: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchEventDataById(eventId); // Pass the userId to fetchUserDataById\r\n    }, [eventId]); //wheen ever there is a chane in userId, run this\r\n\r\n    const fetchEventDataById = async (eventId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await EventService.getUserById(eventId, token); // Pass userId to getUserById\r\n            const { name, email, role, city } = response.ourUsers;\r\n            setUserData({ name, email, role, city });\r\n        } catch (error) {\r\n            console.error('Error fetching user data:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserData((prevUserData) => ({\r\n            ...prevUserData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const confirmDelete = window.confirm('Are you sure you want to delete this user?');\r\n            if (confirmDelete) {\r\n                const token = localStorage.getItem('token');\r\n                const res = await UserService.updateUser(userId, userData, token);\r\n                console.log(res)\r\n                // Redirect to profile page or display a success message\r\n                navigate(\"/admin/user-management\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating user profile:', error);\r\n            alert(error)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            <h2>Update User</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" name=\"name\" value={userData.name} onChange={handleInputChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" name=\"email\" value={userData.email} onChange={handleInputChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Role:</label>\r\n                    <input type=\"text\" name=\"role\" value={userData.role} onChange={handleInputChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>City:</label>\r\n                    <input type=\"text\" name=\"city\" value={userData.city} onChange={handleInputChange} />\r\n                </div>\r\n                <button type=\"submit\">Update</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}