{"ast":null,"code":"var _jsxFileName = \"C:\\\\an3\\\\IS\\\\HAISAVEDEEMMMMMMMMM\\\\users-management-system-java-react\\\\frontend\\\\src\\\\components\\\\event\\\\EventManagementPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EventService from \"../service/EventService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventManagementPage() {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Fetch events data when the component mounts\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n      const response = await EventService.getAllEvents(token);\n      setEvents(response.eventsList); // Assuming the list of events is under the key 'eventsList'\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n  const deleteEvent = async eventId => {\n    try {\n      // Prompt for confirmation before deleting the event\n      const confirmDelete = window.confirm(\"Are you sure you want to delete this event?\");\n      const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n      if (confirmDelete) {\n        await EventService.deleteEvent(eventId, token);\n        // After deleting the event, fetch the updated list of events\n        fetchEvents();\n      }\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Management Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reg-button\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-event\",\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TicketsAvailable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: events.map(event => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: event.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: event.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: event.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => deleteEvent(event.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/update-event/${event.id}`,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(EventManagementPage, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventManagementPage;\nexport default EventManagementPage;\nvar _c;\n$RefreshReg$(_c, \"EventManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","EventService","jsxDEV","_jsxDEV","EventManagementPage","_s","events","setEvents","fetchEvents","token","localStorage","getItem","response","getAllEvents","eventsList","error","console","deleteEvent","eventId","confirmDelete","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","event","id","name","date","location","onClick","_c","$RefreshReg$"],"sources":["C:/an3/IS/HAISAVEDEEMMMMMMMMM/users-management-system-java-react/frontend/src/components/event/EventManagementPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EventService from \"../service/EventService\";\r\n\r\nfunction EventManagementPage() {\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch events data when the component mounts\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\r\n            const response = await EventService.getAllEvents(token);\r\n            setEvents(response.eventsList); // Assuming the list of events is under the key 'eventsList'\r\n        } catch (error) {\r\n            console.error(\"Error fetching events:\", error);\r\n        }\r\n    };\r\n\r\n    const deleteEvent = async (eventId) => {\r\n        try {\r\n            // Prompt for confirmation before deleting the event\r\n            const confirmDelete = window.confirm(\r\n                \"Are you sure you want to delete this event?\"\r\n            );\r\n\r\n            const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\r\n            if (confirmDelete) {\r\n                await EventService.deleteEvent(eventId, token);\r\n                // After deleting the event, fetch the updated list of events\r\n                fetchEvents();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting event:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"event-management-container\">\r\n            <h2>Event Management Page</h2>\r\n            <button className=\"reg-button\">\r\n                <Link to=\"/add-event\">Add Event</Link>\r\n            </button>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Date</th>\r\n                    <th>Location</th>\r\n                    <th>Description</th>\r\n                    <th>TicketsAvailable</th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {events.map((event) => (\r\n                    <tr key={event.id}>\r\n                        <td>{event.id}</td>\r\n                        <td>{event.name}</td>\r\n                        <td>{event.date}</td>\r\n                        <td>{event.location}</td>\r\n                        <td>\r\n                            <button\r\n                                className=\"delete-button\"\r\n                                onClick={() => deleteEvent(event.id)}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                            <button>\r\n                                <Link to={`/update-event/${event.id}`}>Update</Link>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventManagementPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,YAAY,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACAS,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,MAAMC,QAAQ,GAAG,MAAMX,YAAY,CAACY,YAAY,CAACJ,KAAK,CAAC;MACvDF,SAAS,CAACK,QAAQ,CAACE,UAAU,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,MAAOC,OAAO,IAAK;IACnC,IAAI;MACA;MACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAChC,6CACJ,CAAC;MAED,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAIQ,aAAa,EAAE;QACf,MAAMlB,YAAY,CAACgB,WAAW,CAACC,OAAO,EAAET,KAAK,CAAC;QAC9C;QACAD,WAAW,CAAC,CAAC;MACjB;IACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKmB,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACvCpB,OAAA;MAAAoB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BxB,OAAA;MAAQmB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC1BpB,OAAA,CAACH,IAAI;QAAC4B,EAAE,EAAC,YAAY;QAAAL,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACTxB,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,eACApB,OAAA;UAAAoB,QAAA,gBACIpB,OAAA;YAAAoB,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACXxB,OAAA;YAAAoB,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbxB,OAAA;YAAAoB,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbxB,OAAA;YAAAoB,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBxB,OAAA;YAAAoB,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBxB,OAAA;YAAAoB,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRxB,OAAA;QAAAoB,QAAA,EACCjB,MAAM,CAACuB,GAAG,CAAEC,KAAK,iBACd3B,OAAA;UAAAoB,QAAA,gBACIpB,OAAA;YAAAoB,QAAA,EAAKO,KAAK,CAACC;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBxB,OAAA;YAAAoB,QAAA,EAAKO,KAAK,CAACE;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBxB,OAAA;YAAAoB,QAAA,EAAKO,KAAK,CAACG;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBxB,OAAA;YAAAoB,QAAA,EAAKO,KAAK,CAACI;UAAQ;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBxB,OAAA;YAAAoB,QAAA,gBACIpB,OAAA;cACImB,SAAS,EAAC,eAAe;cACzBa,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACa,KAAK,CAACC,EAAE,CAAE;cAAAR,QAAA,EACxC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxB,OAAA;cAAAoB,QAAA,eACIpB,OAAA,CAACH,IAAI;gBAAC4B,EAAE,EAAG,iBAAgBE,KAAK,CAACC,EAAG,EAAE;gBAAAR,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA,GAfAG,KAAK,CAACC,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACtB,EAAA,CA9EQD,mBAAmB;AAAAgC,EAAA,GAAnBhC,mBAAmB;AAgF5B,eAAeA,mBAAmB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}